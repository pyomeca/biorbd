// File : biorbd_muscles.i
%{
#include "Muscles/StateDynamics.h"
#include "Muscles/MuscleGroup.h"
#include "Muscles/Muscle.h"
#include "Muscles/Caracteristics.h"
#include "Muscles/Geometry.h"
#include "Muscles/HillType.h"
#include "Muscles/HillThelenType.h"
#include "Muscles/IdealizedActuator.h"
#include "Muscles/HillThelenTypeFatigable.h"
#include "Muscles/FatigueParameters.h"
#include "Muscles/FatigueState.h"
#include "Muscles/FatigueDynamicState.h"
#include "Muscles/FatigueDynamicStateXia.h"
#include "Muscles/Force.h"
#ifndef SKIP_STATIC_OPTIM
#include "Muscles/StaticOptimization.h"
#endif
%}

// Instantiate templates
namespace std {
%template(SharedBiorbdMuscle) std::shared_ptr<biorbd::muscles::Muscle>;
%template(VecBiorbdMuscleStateDynamics) std::vector<biorbd::muscles::StateDynamics>;
%template(MatBiorbdMuscleStateDynamics) std::vector<std::vector<biorbd::muscles::StateDynamics>>;
%template(SharedBiorbdMuscleFatigueState) std::shared_ptr<biorbd::muscles::FatigueState>;
}

// Exposing some useful functions
%extend biorbd::Model{
    biorbd::rigidbody::GeneralizedTorque muscularJointTorque(
                const std::vector<biorbd::muscles::StateDynamics> &state,
                const biorbd::rigidbody::GeneralizedCoordinates &Q,
                const biorbd::rigidbody::GeneralizedCoordinates &QDot)
    {
        std::vector<std::shared_ptr<biorbd::muscles::StateDynamics>> state_ptr(state.size());
        for (unsigned int i=0; i<state.size(); ++i)
            state_ptr[i] = std::make_shared<biorbd::muscles::StateDynamics>(state[i]);
        return self->muscularJointTorque(state_ptr, true, &Q, &QDot);
    }
}

// extension of muscle casting
%extend biorbd::muscles::IdealizedActuator{
    static biorbd::muscles::IdealizedActuator DeepCopy(const biorbd::muscles::Muscle& other)
    {
        biorbd::muscles::IdealizedActuator copy;
        copy.DeepCopy(dynamic_cast<const biorbd::muscles::IdealizedActuator&>(other));
        return copy;
    }
}

%extend biorbd::muscles::HillType{
    static biorbd::muscles::HillType DeepCopy(const biorbd::muscles::Muscle& other)
    {
        biorbd::muscles::HillType copy;
        copy.DeepCopy(dynamic_cast<const biorbd::muscles::HillType&>(other));
        return copy;
    }
}
%extend biorbd::muscles::HillThelenType{
    static biorbd::muscles::HillThelenType DeepCopy(const biorbd::muscles::Muscle& other)
    {
        biorbd::muscles::HillThelenType copy;
        copy.DeepCopy(dynamic_cast<const biorbd::muscles::HillThelenType&>(other));
        return copy;
    }
}
%extend biorbd::muscles::HillThelenTypeFatigable{
    static biorbd::muscles::HillThelenTypeFatigable DeepCopy(const biorbd::muscles::Muscle& other)
    {
        biorbd::muscles::HillThelenTypeFatigable copy;
        copy.DeepCopy(dynamic_cast<const biorbd::muscles::HillThelenTypeFatigable&>(other));
        return copy;
    }
}

// extension of muscle fatigueState casting
%extend biorbd::muscles::FatigueDynamicStateXia{
    static biorbd::muscles::FatigueDynamicStateXia DeepCopy(const biorbd::muscles::FatigueState& other)
    {
        biorbd::muscles::FatigueDynamicStateXia copy;
        copy.DeepCopy(dynamic_cast<const biorbd::muscles::FatigueDynamicStateXia&>(other));
        return copy;
    }
    static biorbd::muscles::FatigueDynamicStateXia DeepCopy(const biorbd::muscles::FatigueDynamicState& other)
    {
        biorbd::muscles::FatigueDynamicStateXia copy;
        copy.DeepCopy(dynamic_cast<const biorbd::muscles::FatigueDynamicStateXia&>(other));
        return copy;
    }
}


// Includes all neceressary files from the API
%include "@CMAKE_SOURCE_DIR@/include/Muscles/MusclesEnums.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/Compound.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/Muscle.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/Fatigable.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/HillType.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/HillThelenType.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/HillThelenTypeFatigable.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/IdealizedActuator.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/Muscles.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/MuscleGroup.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/Caracteristics.h"

%include "@CMAKE_SOURCE_DIR@/include/Muscles/FatigueParameters.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/FatigueState.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/FatigueDynamicState.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/FatigueDynamicStateXia.h"
//%include "Muscles/Force.h"
//%include "Muscles/ForceFromInsertion.h"
//%include "Muscles/ForceFromOrigin.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/Geometry.h"
//%include "Muscles/Mesh.h"
//%include "Muscles/PathChanger.h"
//%include "Muscles/PathChangers.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/State.h"
%include "@CMAKE_SOURCE_DIR@/include/Muscles/StateDynamics.h"
//%include "Muscles/StateDynamicsBuchanan.h"
@SWIG_STATIC_OPTIMIZATION_INCLUDE_COMMAND@

